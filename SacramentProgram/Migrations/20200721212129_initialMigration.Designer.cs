// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SacramentProgram.Data;

namespace SacramentProgram.Migrations
{
    [DbContext(typeof(SacramentProgramContext))]
    [Migration("20200721212129_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("SacramentProgram.Models.Meeting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccompanimentID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClosingPrayerIdID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClosingSongID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConductingID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntermediateSongID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeadingMusicID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MusicalNumberID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OpeningPrayerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OpeningSongID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PresidingID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SacramentSongID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WardName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AccompanimentID");

                    b.HasIndex("ClosingPrayerIdID");

                    b.HasIndex("ClosingSongID");

                    b.HasIndex("ConductingID");

                    b.HasIndex("IntermediateSongID");

                    b.HasIndex("LeadingMusicID");

                    b.HasIndex("MusicalNumberID");

                    b.HasIndex("OpeningPrayerID");

                    b.HasIndex("OpeningSongID");

                    b.HasIndex("PresidingID");

                    b.HasIndex("SacramentSongID");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("SacramentProgram.Models.MusicalNum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Performer")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SongID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("SongID");

                    b.ToTable("MusicalNum");
                });

            modelBuilder.Entity("SacramentProgram.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BroOrSis")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("SacramentProgram.Models.Song", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PageNum")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Song");
                });

            modelBuilder.Entity("SacramentProgram.Models.Speaker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MeetingID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Topic")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("MeetingID");

                    b.HasIndex("PersonID");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("SacramentProgram.Models.Meeting", b =>
                {
                    b.HasOne("SacramentProgram.Models.Person", "Accompaniment")
                        .WithMany()
                        .HasForeignKey("AccompanimentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.Person", "ClosingPrayerId")
                        .WithMany()
                        .HasForeignKey("ClosingPrayerIdID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.Song", "ClosingSong")
                        .WithMany()
                        .HasForeignKey("ClosingSongID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.Person", "Conducting")
                        .WithMany()
                        .HasForeignKey("ConductingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.Song", "IntermediateSong")
                        .WithMany()
                        .HasForeignKey("IntermediateSongID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.Person", "LeadingMusic")
                        .WithMany()
                        .HasForeignKey("LeadingMusicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.MusicalNum", "MusicalNumber")
                        .WithMany()
                        .HasForeignKey("MusicalNumberID");

                    b.HasOne("SacramentProgram.Models.Person", "OpeningPrayer")
                        .WithMany()
                        .HasForeignKey("OpeningPrayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.Song", "OpeningSong")
                        .WithMany()
                        .HasForeignKey("OpeningSongID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.Person", "Presiding")
                        .WithMany()
                        .HasForeignKey("PresidingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacramentProgram.Models.Song", "SacramentSong")
                        .WithMany()
                        .HasForeignKey("SacramentSongID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SacramentProgram.Models.MusicalNum", b =>
                {
                    b.HasOne("SacramentProgram.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongID");
                });

            modelBuilder.Entity("SacramentProgram.Models.Speaker", b =>
                {
                    b.HasOne("SacramentProgram.Models.Meeting", "Meeting")
                        .WithMany("Speakers")
                        .HasForeignKey("MeetingID");

                    b.HasOne("SacramentProgram.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID");
                });
#pragma warning restore 612, 618
        }
    }
}
